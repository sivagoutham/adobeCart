{"version":3,"sources":["components/Header/header.js","components/ShoppingList/shoppingList.js","components/actions/cartActions.js","components/actions/action-types/cart-actions.js","components/Sort/sort.js","components/Filter/filter.js","components/Footer/footer.js","components/Cart/cart.js","App.js","serviceWorker.js","components/reducers/cartReducer.js","index.js"],"names":["connect","state","console","log","items","addedItems","total","props","history","useHistory","React","useState","Search","setSearch","className","onClick","push","type","placeholder","length","ShoppingList","handleClick","name","addToCart","List","sortData","bind","mapping","this","sort","_","o","price","actual","discount","map","item","i","key","src","image","alt","display","Component","initialData","dispatch","Sort","clickValue","value","setState","Filter","style","margin","id","transform","Footer","Cart","data","paddingLeft","finalBill","App","path","exact","Boolean","window","location","hostname","match","initState","Object","assign","cartReducer","action","addedItem","find","existed_item","quantity","newTotal","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5aa9e20c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './header.css';\r\nimport {useHistory} from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\n\r\nfunction Header(props) {\r\n\r\n    let history = useHistory();\r\n\r\n        const [Search,setSearch] = React.useState(false);\r\n        const onClick = ()=>setSearch(true)\r\n\r\n        return(\r\n            <div className = 'header'>\r\n            <div >\r\n                <i className=\"fa fa-star starIcon\" onClick={() => history.push('/adobeCart')}></i>\r\n            </div>\r\n            <div>\r\n                <i className=\"fa fa-search searchIcon\" onClick={onClick}></i>\r\n                {\r\n                    Search ? <div className=\"togglesearch\">\r\n                    <input className='InputSearch' type=\"text\" placeholder=\"Search\"/>\r\n                </div> :null\r\n                }\r\n                \r\n            </div>\r\n            <div>\r\n                <i className=\"fa fa-shopping-cart cartIcon\" onClick={() => history.push('/Cart')}></i>\r\n                {props.items.length>0 ?<div className='count'>{props.items.length}</div>:null}\r\n            </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    console.log(state)\r\n    return{\r\n        items: state.addedItems,\r\n        total:state.total\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header);","import React,{Component} from \"react\";\r\nimport './shoppingList.css';\r\nimport * as _ from \"lodash\";\r\nimport { connect } from 'react-redux'\r\nimport { addToCart } from '../actions/cartActions'\r\n\r\nclass ShoppingList extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            List:[],\r\n        }\r\n\r\n        this.sortData = this.sortData.bind(this);\r\n    }\r\n\r\n    handleClick = (name)=>{\r\n        this.props.addToCart(name);\r\n    }\r\n\r\n    sortData(){\r\n        let mapping ;\r\n        if(this.props.sort==='high'){\r\n            mapping = _.orderBy(this.props.items, o => o.price.actual,'desc')\r\n        }else if(this.props.sort==='low'){\r\n            mapping = _.orderBy(this.props.items, o => o.price.actual,'asc')\r\n        }\r\n        else if(this.props.sort==='discount'){\r\n            mapping = _.orderBy(this.props.items, o => o.discount,'asc')\r\n        }\r\n        const myData =mapping.map((item,i)=>{\r\n                        return(\r\n                            <div className='column' key={i}>\r\n                                    <img className='imgSection' src={item.image} alt={item.name} />\r\n                                    <div>{item.name}</div>\r\n                                    <div className='priceList'>\r\n                                        <div className='price'><span>&#8377;</span>{item.price.actual}</div>\r\n                                        <div className='price priceDisplay'><del>{item.price.display}</del></div>\r\n                                        <div className='price priceDiscount'>{item.discount}{'% off'}</div>\r\n                                    </div>\r\n                                    <button className=\"button btnCart\" onClick={()=>this.handleClick(item.name)}>Add to Cart</button>\r\n\r\n                            </div>\r\n                        )\r\n                    })\r\n        \r\n        return myData\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n\r\n        \r\n        return(\r\n            <div className='row'>\r\n                {\r\n                    this.sortData()\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return {\r\n        items:state.initialData.items\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps =(dispatch)=>{\r\n    return {\r\n        addToCart :(name)=>{\r\n            dispatch(addToCart(name))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ShoppingList);","import {ADD_TO_CART} from '../actions/action-types/cart-actions'\r\n\r\nexport const addToCart =(name)=>{\r\n    return {\r\n        type : ADD_TO_CART,\r\n        name\r\n    }\r\n}","export const ADD_TO_CART = 'ADD_TO_CART';","import React,{ Component } from \"react\";\r\nimport './sort.css';\r\nimport ShoppingList from '../ShoppingList/shoppingList';\r\n\r\nclass Sort extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            clickValue:'high'\r\n        }\r\n\r\n        this.price=this.price.bind(this);\r\n    }\r\n\r\n    price(value){\r\n        this.setState({clickValue:value})\r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n        return(\r\n            <div className='sortData'>\r\n\r\n            <div className='fragment'>\r\n\r\n                <span className='sortName'>Sort By</span>\r\n\r\n                <div className={this.state.clickValue==='high'?'highlightColor':'normalDisplay'} \r\n                onClick={()=>this.price('high')}>\r\n                Price -- High Low\r\n                </div>\r\n\r\n                <div className={this.state.clickValue==='low'?'highlightColor':'normalDisplay'} \r\n                onClick={()=>this.price('low')}>\r\n                Price -- Low High\r\n                </div>\r\n\r\n                <div className={this.state.clickValue==='discount'?'highlightColor':'normalDisplay'} \r\n                onClick={()=>this.price('discount')}>\r\n                Discount\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <ShoppingList sort={this.state.clickValue}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Sort;","import React,{Component} from \"react\";\r\nimport './filter.css';\r\n\r\nclass Filter extends Component{\r\n\r\n    render(){\r\n        return(\r\n            <div className='filterContainer'>\r\n                <h3 style={{margin: '10px'}}>Filters</h3>\r\n                <input type=\"hidden\" id=\"hidden_minimum_price\" value=\"100\"/>\r\n                <input type=\"hidden\" id=\"hidden_maximum_price\" value=\"10000\"/>\r\n                <div className=\"values\">\r\n                  <div><span>&#8377;</span>100</div>\r\n                  <div><span>&#8377;</span>10000</div>\r\n                </div>\r\n                <div>\r\n                  <div className='slider'>\r\n                      <div className='leftDot' style={{transform: 'translateX(0px)'}}>\r\n                        <div className='leftDotInner'></div>\r\n                      </div>\r\n                      <div className='rightDot' style={{transform: 'translateX(-1.19px)'}}>\r\n                        <div className='rightDotInner'></div>\r\n                      </div>\r\n                      <div className='sliderBar'></div>\r\n                      <div className='sliderBarVariation' style={{transform: 'translate(0px) scaleX(0.995)'}}>\r\n                      </div>\r\n                  </div>\r\n                  <div className='priceName'>Price</div>\r\n\r\n                </div>\r\n                <button className=\"button\">Apply</button>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Filter;","import React,{Component} from \"react\";\r\nimport './footer.css';\r\n\r\nclass Footer extends Component{\r\n\r\n    render(){\r\n        return(\r\n            <div className = 'footer'>\r\n                @copyright\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;","import React,{Component} from \"react\";\r\nimport './cart.css';\r\nimport { connect } from 'react-redux'\r\nimport data from '../..//cart.json';\r\n\r\nconst shoppingList = data.items;\r\n\r\nclass Cart extends Component{\r\n\r\n    render(){\r\n        let addedItems = this.props.items.length ?\r\n            (\r\n                    this.props.items.map((item,i)=>{\r\n                        return(\r\n                            <div className='column1' key={i}>\r\n                                    <img className='imgSection' src={item.image} alt={item.name} />\r\n                                    <div style={{paddingLeft:'10px'}}>\r\n                                        <div>{item.name}</div>\r\n                                            <div className='priceList'>\r\n                                                <div className='price'><span>&#8377;</span>{item.price.actual}</div>\r\n                                                <div className='price priceDisplay'><del>{item.price.display}</del></div>\r\n                                                <div className='price priceDiscount'>{item.discount}{'% off'}</div>\r\n                                            </div>\r\n                                    </div>\r\n                                    <div className='IncrementContainer'>\r\n                                        <div className='flexContainer'>\r\n                                            <button className='btnMinus'>-</button>\r\n                                            <div className='inputBox'>\r\n                                                <input type=\"text\" value=\"1\" className=\"inputText\"/>\r\n                                            </div>\r\n                                            <button className='btnPlus'>+</button>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"removeBtn\">Remove</div>\r\n\r\n                            </div>\r\n                        )\r\n                    })\r\n                ):null\r\n        return(\r\n            \r\n            <div className='cartContainer'>\r\n            \r\n                <div className='cartItemsContainer'>\r\n                <div className='row'>\r\n                {addedItems}\r\n                </div>\r\n            </div>\r\n            {this.props.items.length?<div className = \"totalContainer\">\r\n                <span className='priceDetails'> PRICE DETAILS </span>\r\n                <div className='details'>\r\n                    <div className=\"price\">\r\n                        <div className=\"priceHeader\">Price ({this.props.items.length} items)</div>\r\n                        <span> :</span>\r\n                        <span> ₹{this.props.total}</span>\r\n                    </div>\r\n                    <div className=\"price\">\r\n                        <div className=\"priceHeader\">Discount</div>\r\n                        <span> :</span>\r\n                        <span> ₹{this.props.discount}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='total'>\r\n                    <div className=\"price\">\r\n                        <div className=\"priceHeader\">Total Payable</div>\r\n                        <span> ₹{this.props.finalBill}</span>\r\n                    </div>\r\n                </div>\r\n            </div>:null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return{\r\n        items: state.addedItems,\r\n        total:state.total,\r\n        discount:state.discount,\r\n        finalBill:state.finalBill\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Cart)","import React from 'react';\nimport './App.css';\nimport Header from './components/Header/header';\nimport Sort from \"./components/Sort/sort\";\nimport Filter from './components/Filter/filter';\nimport Footer from './components/Footer/footer';\nimport Cart from './components/Cart/cart';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router >\n      <Header/>\n      <Switch>\n        <div className='container'>\n          <Route path=\"/adobeCart\" exact> <Filter/><Sort /> </Route>\n          <Route path='/Cart'><Cart/></Route>\n        </div>\n      </Switch>\n      \n      <Footer/>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import data from '../../cart.json';\r\nimport {ADD_TO_CART} from '../actions/action-types/cart-actions'\r\n\r\nconst initialData = Object.assign(data)\r\nconst initState={\r\n    initialData,\r\n    addedItems:[],\r\n    total:0,\r\n    discount:0,\r\n    finalBill:0 };\r\n\r\n\r\nconst cartReducer = (state = initState,action)=>{\r\n    if(action.type === ADD_TO_CART){\r\n        let addedItem = state.initialData.items.find(item=> item.name === action.name)\r\n\r\n        let existed_item= state.addedItems.find(item=> action.name === item.name)\r\n        if(existed_item)\r\n         {\r\n            addedItem.quantity += 1 \r\n             return{\r\n                ...state,\r\n                 total: state.total + addedItem.price.actual,\r\n                 discount:state.discount + addedItem.discount,\r\n                 finalBill : state.total-state.discount\r\n                  }\r\n        }else{\r\n            addedItem.quantity = 1;\r\n            \r\n            //calculating the total\r\n            let newTotal = state.total + addedItem.price.actual\r\n            let discount = state.discount+ addedItem.discount;\r\n            let finalBill = newTotal-discount\r\n            \r\n            return{\r\n                ...state,\r\n                addedItems: [...state.addedItems, addedItem],\r\n                total : newTotal,\r\n                discount:discount,\r\n                finalBill:finalBill\r\n            }\r\n            \r\n        }\r\n    }else{\r\n        return state;\r\n    }\r\n    \r\n}\r\n\r\nexport default cartReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport cartReducer from './components/reducers/cartReducer';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\n\nconst store = createStore(cartReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}